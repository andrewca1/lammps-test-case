# create otuput directory
shell              mkdir ${dname}
log                ${dname}/log.lammps
echo               both
variable           ndim equal 2
dimension          ${ndim}
units              si
# requires a custom version of LAMMPS
# https://github.com/slitvinov/lammps-sph-multiphase
# Built with
# make yes-USER-SPH
# 
# See also
# http://lammps.sandia.gov/doc/Section_start.html#start_3
atom_style         meso/multiphase
boundary          p p p
include           vars.lmp

# 2D flow poiseulle
# Adding a new property - need to be added before simulation box
fix   	        prop all property/atom d_cA d_dcA ghost yes

# create simulation box and 3 types of particles
variable           pLz    equal  ${dx}
variable           nLz    equal  0

lattice            sq ${dx} origin 0.5 0.5 0.0
region             box block 0.0 ${Lx} 0.0 ${Ly} ${nLz} ${pLz} units box
create_box         3 box
create_atoms       1 region box

# define regions
region             top block 0.0 ${Lx} ${ywallt} ${Ly} ${nLz} ${pLz} units box
group              upper region top
region             bottom block 0.0 ${Lx} 0.0 ${ywallb} ${nLz} ${pLz} units box
group              lower region bottom
group              wall union lower upper
group              flow subtract all wall

set                group lower type 2
set                group upper type 3

# do full time integration for all particles
fix                integrate_fix_full all meso

dump               dump_id all custom ${Nfreq} ${dname}/dump*.dat id type x y z vx vy vz
dump_modify        dump_id first yes sort id pad 8

variable           sph_mu  equal ${sph_eta}/${sph_rho}
include            settimestep.lmp

neighbor           0     bin
neigh_modify       delay 0 every 1
comm_modify        vel yes

set                group all meso/rho ${sph_rho}
set                group all mass ${sph_mass}

# Couette flow
variable           Vx equal 3.0*${dx}
velocity           lower set 0.0 0.0 0.0
velocity           upper set v_Vx 0.0 0.0
fix                noslip wall setforce 0.0 0.0 0.0
fix                4 all enforce2d

# # Poiseuille flow
# velocity             wall set 0.0 0.0 0.0
# fix                  noslip lower setforce 0.0 0.0 0.0
# fix                  4 upper setforce 0.0 0.0 0.0
# variable             bodyfx atom mass*${gx}
# fix                  pressure flow addforce v_bodyfx 0.0 0.0
# fix                  7 all enforce2d

set		atom * d_dcA 0.0
set		atom * d_cA 0.0

# Pair force style
pair_style         hybrid/overlay sph/rhosum/multiphase 1  sph/taitwater/multiphase sph/concAdiffusion
pair_coeff         * * sph/taitwater/multiphase ${sph_rho} ${sph_c} ${sph_eta} 1.0 ${h} 0.0
pair_coeff         * * sph/rhosum/multiphase   ${h}
pair_coeff         * * sph/concAdiffusion 1e-8 1e-8 ${h}

timestep           ${dt}

variable         rtransient equal round(${T}/${dt})
if "${ndim}==2" then "fix e2d all enforce2d"
run              ${rtransient}

# save velocity profile
compute cc2 flow chunk/atom bin/1d y 0.0 1.0
fix 1 flow ave/chunk 1 ${rtransient} ${rtransient} cc2 vx vz norm sample file ${dname}/vel_${T}.profile

run               ${rtransient}
